"""
需求:
    有一天你穿越到了古代, 碰巧约到古代的皇帝在杀人, 有两个消息, 1个好消息, 1个坏消息.
    坏消息: 你也在此列.
    好消息: 你可以选择自己占的位置.
    规则: 让所有的人从1开始不断数数, 每次累加1, 只要数到3的倍数, 就干掉这个人, 直至剩下最后1个人, 他站的位置就是: 幸运数字.
    参考答案: 10个人玩游戏 -> 幸运数字: 4
"""

# 思路1: 传统编程思路, 业务逻辑实现.
# 1. 定义变量, 记录参与游戏的人数, 并接收.
n = int(input('请录入参与游戏的人数: '))
# 2. 生成列表.
num_list = [i for i in range(1, n + 1)]
# 3. 定义变量, 分别记录: 当前数到的数字, 当前元素的索引.
current_num = 0  # 当前数到的数字
i = 0  # 当前元素的索引
# 4. 循环, 直到列表中只剩下1个元素.
while len(num_list) != 1:
    # 5. 先数 数字.
    current_num += 1
    if current_num % 3 == 0:
        print(f'删除的元素：{num_list[i]}')
        num_list.pop(i)

        # 细节1: 因为删除元素后, 后续元素的索引会-1, 所以: i也要同步-1
        i -= 1
        print(f'打印索引：{i}')
    # 7. 走到这里, 说明上个人已经报过数字了, 我们继续游戏即可.
    i += 1
    # 8. 做越界处理.
    if i >= len(num_list):
        # 细节2: 走到这里, 说明本轮结束, (开启下轮报数)从头开始报数即可.
        i = 0
    # 9. 走到这里, 说明幸运数字已经找到了, 返回即可.
print(f'{n}人参与游戏, 幸运数字是: {num_list[0]}')
