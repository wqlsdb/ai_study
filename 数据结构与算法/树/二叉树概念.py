'''
树相关的概述:
    概述:
        它属于数据结构的一种, 属于 非线性结构, 即: 每个节点可以有1个父节点(前驱) 和 n个子节点(后继)
    特点:
        1. 有且只能有1个根节点.
        2. 每个节点都只有1个父节点 及 若干个子节点,   根节点除外(它没有父节点)
        3. 没有子节点的节点称之为: 叶子节点.
    名词解释:
        树的度: 树结构中, 最大的 节点的度 称之为: 树的度
        树的层: 根节点为第1层, 以此类推, 最大的层数就是 树的层.
        森系结构: 由多棵树组成的结构.
    分类:
        完全二叉树: 除了最后1层, 其它层都是满的.
        满二叉树:  树的所有叶子节点, 都在最后一层.
        平衡二叉树: 任意节点的两个子树的高度差不超过1, 目的: 防止树退化成链表.
        排序二叉树: 按照 中序(左根右) 的顺序获取数据, 是一个有序的序列.
    存储:
        顺序表:
            只存储节点的数据, 相对节省空间.  有索引, 方便查找数据, 但是不存储节点之间的关系.
        链表存储:
            不仅存储节点的数据, 还存储节点的关系, 相对更占用空间.
            但是方便我们维护和管理节点(的关系).     推荐.
            把树转成二叉树, 每个二叉树都有: data(存数据的) + next(左子树, left child) + next(右子树 right child) 组成.

层次遍历：0123456789
先序遍历：0137849256：根左右
中序遍历：7381940526 左根右
后续遍历：7839415620 左右根

                    0
                /       \
            1             2
        /       \        /  \
      3          4     5     6
    /   \       /
  7      8     9


'''

