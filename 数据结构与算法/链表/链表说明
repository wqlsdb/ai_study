"""
链表介绍:
    概述:
        它属于数据结构的一种, 属于: 线性结构(每个节点都只能有1个前驱节点 和 1个后继节点)
    回顾: 顺序表的弊端
        扩容时要求有足够的连续的内存空间, 否则扩容失败.
    链表扩容:
        比较简单, 有地儿就行, 可以不连续, 最后通过"链条"连接起来.
        链表 = 通过 一条线把各个节点链接起来, 形成一个 链条就叫: 链表.
    组成:
        元素域(数值域) + 链接域(地址域)
    分类:
        单向链表:
            每个节点由 元素域(数值域) + 链接域(地址域), 前边节点的链接域指向后1个节点的地址, 最后1个节点的链接域为: None.
        单向循环链表:
            每个节点由 元素域(数值域) + 链接域(地址域), 前边节点的链接域指向后1个节点的地址, 最后1个节点的链接域为: 第1个节点的地址.
        双向链表:
            每个节点由 链接域(地址域) + 元素域(数值域) + 链接域(地址域),
            每个节点的链接域会分别指向: 前, 后节点的地址.
            第1个节点的: 前链接域(地址域) 和 最后1个节点的 后链接域(地址域)为 None
        双向循环链表:
            每个节点由 链接域(地址域) + 元素域(数值域) + 链接域(地址域),
            每个节点的链接域会分别指向: 前, 后节点的地址.
            第1个节点的: 前链接域(地址域) 指向最后1个节点的 地址.
            最后1个节点的 后链接域(地址域)指向第1个节点的 地址.
    需求:
        自定义代码, 采用面向对象思维, 模拟链表.
"""